{"version":3,"sources":["Components/Alert.jsx","Components/Navbar.jsx","Components/Textform.jsx","App.js","index.js"],"names":["Alert","props","style","height","alert","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","id","onClick","toggleMode","htmlFor","defaultProps","aboutText","Textform","useState","text","setText","color","heading","backgroundColor","value","onChange","event","target","rows","placeholder","disabled","length","newText","showAlert","split","join","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","filter","element","App","setMode","setAlert","message","setTimeout","body","ReactDOM","render"],"mappings":"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","file":"static/js/main.189a9c4c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Alert = (props) => {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"50px\" }}>\r\n      {props.alert && (\r\n        <div\r\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n          role=\"alert\"\r\n        >\r\n          <strong> {capitalize(props.alert.type)} </strong> : {props.alert.msg}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Navbar = (props) => {\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg  navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n            </ul>\r\n\r\n            <div\r\n              className={`form-check form-switch mx-2 text-${\r\n                props.mode === \"light\" ? \"dark\" : \"light\"\r\n              }`}\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                onClick={props.toggleMode}\r\n                type=\"checkbox\"\r\n                id=\"flexSwitchCheckDefault\"\r\n              />\r\n              <label\r\n                className=\"form-check-label\"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                Enable Dark Mode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = { title: PropTypes.string, aboutText: PropTypes.string };\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"About\",\r\n};\r\n\r\nexport default Navbar;\r\n","import { useState } from \"react\";\r\n\r\nconst Textform = (props) => {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Upper Case...!\", \"success \");\r\n  };\r\n  const handleLowClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lower Case...!\", \"success \");\r\n  };\r\n  const handleClearClick = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text is cleared...!\", \"success \");\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    document.getSelection().removeAllRanges();\r\n    props.showAlert(\"Text is Copied on clipboard...!\", \"success \");\r\n  };\r\n\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra spaces are removed...!\", \"success \");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h1 className=\"mb-3 \"> {props.heading} </h1>\r\n        <div className=\"mb-3 \">\r\n          <textarea\r\n            className=\"form-control my-3\"\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"#13466e\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n            }}\r\n            id=\"myBox\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            rows=\"8\"\r\n            placeholder=\"Enter Your text here\"\r\n          ></textarea>\r\n          <button\r\n            disabled={text.length === 0}\r\n            type=\"button\"\r\n            className=\"btn btn-primary mx-2 my-2\"\r\n            onClick={handleUpClick}\r\n          >\r\n            Convert to Uppercase\r\n          </button>\r\n          <button\r\n            disabled={text.length === 0}\r\n            type=\"button\"\r\n            className=\"btn btn-primary mx-2 my-2\"\r\n            onClick={handleLowClick}\r\n          >\r\n            Convert to Lowercase\r\n          </button>\r\n\r\n          <button\r\n            disabled={text.length === 0}\r\n            type=\"button\"\r\n            className=\"btn btn-primary mx-2 my-2\"\r\n            onClick={handleExtraSpaces}\r\n          >\r\n            Remove Extra Spaces\r\n          </button>\r\n\r\n          <button\r\n            disabled={text.length === 0}\r\n            type=\"button\"\r\n            className=\"btn btn-success mx-2 my-2\"\r\n            onClick={handleCopy}\r\n          >\r\n            Copy Text\r\n          </button>\r\n\r\n          <button\r\n            disabled={text.length === 0}\r\n            type=\"button\"\r\n            className=\"btn btn-danger mx-2 my-2\"\r\n            onClick={handleClearClick}\r\n          >\r\n            Clear Text\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className=\"container \"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h2>Your text summary</h2>\r\n        <p>\r\n          {\r\n            text.split(/\\s+/).filter((element) => {\r\n              return element.length !== 0;\r\n            }).length\r\n          }{\" \"}\r\n          words and {text.length} characters.\r\n        </p>\r\n        <p>\r\n          {0.008 *\r\n            text.split(/\\s+/).filter((element) => {\r\n              return element.length !== 0;\r\n            }).length}{\" \"}\r\n          Minutes to read.\r\n        </p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length > 0 ? text : \"Nothing to Preview!\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Textform;\r\n","import React, { useState } from \"react\";\nimport Alert from \"./Components/Alert\";\nimport Navbar from \"./Components/Navbar\";\nimport Textform from \"./Components/Textform\";\n\nconst App = () => {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark Mode has been enabled..!\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been enabled..!\", \"success\");\n    }\n  };\n\n  return (\n    <>\n      <Navbar title=\"TxtUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n\n      <div className=\"container my-3\">\n        <Textform\n          heading=\"TextUtils - Word Counter | Chracter Counter | Remove Extra Spaces\"\n          mode={mode}\n          showAlert={showAlert}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\"\nimport ReactDOM   from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(\n\n  <App/>,\n  document.getElementById(\"root\")\n  );"],"sourceRoot":""}