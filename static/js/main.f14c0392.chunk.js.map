{"version":3,"sources":["Components/Alert.jsx","Components/Navbar.jsx","Components/Textform.jsx","App.js","index.js"],"names":["Alert","props","alert","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","id","onClick","toggleMode","htmlFor","defaultProps","aboutText","Textform","useState","text","setText","style","color","heading","backgroundColor","value","onChange","event","target","rows","placeholder","newText","showAlert","split","join","document","getElementById","select","navigator","clipboard","writeText","length","App","setMode","setAlert","message","setTimeout","body","ReactDOM","render"],"mappings":"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","file":"static/js/main.f14c0392.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Alert = (props) => {\r\n\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        props.alert &&  \r\n           <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong> {capitalize( props.alert.type)} </strong> : {props.alert.msg}\r\n            \r\n          </div>  \r\n        \r\n    )\r\n}\r\n\r\nexport default Alert  ","import PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = (props) => {\r\n  return (\r\n    <>\r\n<nav className= {`navbar navbar-expand-lg  navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  {props.aboutText}\r\n                </a>\r\n              </li> */}\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-primary\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form> */}\r\n            <div className={`form-check form-switch mx-2 text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n  <input className=\"form-check-input\" onClick = {props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = { title: PropTypes.string, aboutText: PropTypes.string};\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText : 'About'\r\n\r\n}\r\n\r\nexport default Navbar;\r\n\r\n","import { useState } from \"react\";\r\n\r\nconst Textform = (props) => {\r\n  const [text, setText] = useState(\"\");\r\n  \r\n  const handleOnChange = (event) => {\r\n    // console.log(\"Onchange\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  // This function is used for  converting lowerCase to upperCase\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    \r\n    // console.log(\"Uppercase was clicked\");\r\n\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Upper Case...!\", \"success \");\r\n  };\r\n  const handleLowClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lower Case...!\", \"success \");\r\n  };\r\n  const handleClearClick = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text is cleared...!\", \"success \");\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    var text = document.getElementById('myBox');\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Text is Copied on clipboard...!\", \"success \");\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n      let newText = text.split(/[ ]+/);\r\n      setText(newText.join(\" \"));\r\n      props.showAlert(\"Extra sspaces are removed...!\", \"success \");\r\n      }\r\n      \r\n    \r\n\r\n  // This function used for writing in textarea we can't write or change in text area because of value in textArea\r\n  // with the help event.target.value we able to change the input\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"container\" style = {{color: props.mode=== 'dark'?'white':'black'}}>\r\n      <h1 className=\"mb-3 \"> {props.heading} </h1>\r\n      <div className=\"mb-3 \">\r\n        <textarea\r\n          className=\"form-control my-3\" style={{backgroundColor: props.mode==='dark'?'grey': 'white', color:props.mode=== 'dark'?'white':'black'}}\r\n          id=\"myBox\"\r\n          value={text}\r\n          onChange={handleOnChange}\r\n          rows=\"8\"\r\n          placeholder=\"Enter Your text here\"\r\n        ></textarea>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary mx-2\"\r\n          onClick={handleUpClick}\r\n        >\r\n          Convert to Uppercase\r\n        </button>\r\n        <button \r\n          type=\"button\"\r\n          className=\"btn btn-primary mx-2\"\r\n          onClick={handleLowClick}\r\n        >\r\n          Convert to Lowercase\r\n        </button>\r\n        \r\n        <button \r\n          type=\"button\"\r\n          className=\"btn btn-primary mx-2\"\r\n          onClick={handleExtraSpaces}\r\n        >\r\n          Remove Extra Spaces\r\n        </button>\r\n\r\n        <button \r\n          type=\"button\"\r\n          className=\"btn btn-success mx-2\"\r\n          onClick={handleCopy}\r\n        >\r\n          Copy Text\r\n        </button>\r\n\r\n        <button \r\n          type=\"button\"\r\n          className=\"btn btn-danger mx-2\"\r\n          onClick={handleClearClick}\r\n        >\r\n          Clear Text\r\n        </button>\r\n        \r\n      </div>\r\n    </div>\r\n\r\n      <div className=\"container \" style={{color: props.mode=== 'dark'?'white':'black'}}>\r\n          <h2>Your text summary</h2>\r\n          <p>{(text.split(\" \").length)-1} words and {text.length} characters.</p>\r\n          {/* <p>{0.008 * text.split(\" \").length} Minutes to read.</p> */}\r\n          <h2>Preview</h2>\r\n          <p>{text.length>0?text: \"Enter something in the above textbox to preview it here\"}</p>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Textform;\r\n","import React, { useState } from \"react\";\nimport Alert from \"./Components/Alert\";\n// import About from './Components/About'\nimport Navbar from \"./Components/Navbar\";\nimport Textform from \"./Components/Textform\";\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nconst App = () => {\n  const [mode, setMode] = useState(\"light\"); // dark mode is enaled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark Mode has been enabled..!\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been enabled..!\", \"success\");\n    }\n  };\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TxtUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        {/* <Switch> */}\n          {/* <Route exact  path=\"/about\"> */}\n            {/* <About /> */}\n          {/* </Route> */}\n          {/* <Route exact path=\"/\"> */}\n            <div className=\"container my-3\">\n              <Textform\n                heading=\"Enter the text to Analyze Below\"\n                mode={mode}\n                showAlert={showAlert}\n              />\n              {/* <About/> */}\n            </div>\n          {/* </Route> */}\n        {/* </Switch> */}\n      {/* </Router> */}\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\"\nimport ReactDOM   from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(\n\n  <App/>,\n  document.getElementById(\"root\")\n  );"],"sourceRoot":""}